// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/retn.proto
package com.mdx.framework.server.api.base;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.List;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class Msg_Retn extends Message {

  private static final long serialVersionUID = 1L;

  public static final Integer DEFAULT_ERRORCODE = 0;
  public static final String DEFAULT_ERRORMSG = "";
  public static final String DEFAULT_RETURNMETHOD = "";
  public static final ByteString DEFAULT_RETNMESSAGE = ByteString.EMPTY;
  public static final List<Msg_Retn> DEFAULT_RETNS = immutableCopyOf(null);

  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public Integer errorCode = DEFAULT_ERRORCODE;

  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public String errorMsg;

  @ProtoField(tag = 3, type = STRING)
  public String returnMethod;

  @ProtoField(tag = 4, type = BYTES)
  public ByteString retnMessage;

  @ProtoField(tag = 5, label = REPEATED, messageType = Msg_Retn.class)
  public List<Msg_Retn> retns = immutableCopyOf(null);

  public Msg_Retn(Integer errorCode, String errorMsg, String returnMethod, ByteString retnMessage, List<Msg_Retn> retns) {
    this.errorCode = errorCode==null?this.errorCode:errorCode;
    this.errorMsg = errorMsg==null?this.errorMsg:errorMsg;
    this.returnMethod = returnMethod==null?this.returnMethod:returnMethod;
    this.retnMessage = retnMessage==null?this.retnMessage:retnMessage;
    this.retns = immutableCopyOf(retns);
  }

  public Msg_Retn() {
  }

  private Msg_Retn(Builder builder) {
    this(builder.errorCode, builder.errorMsg, builder.returnMethod, builder.retnMessage, builder.retns);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Msg_Retn)) return false;
    Msg_Retn o = (Msg_Retn) other;
    return equals(errorCode, o.errorCode)
        && equals(errorMsg, o.errorMsg)
        && equals(returnMethod, o.returnMethod)
        && equals(retnMessage, o.retnMessage)
        && equals(retns, o.retns);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = errorCode != null ? errorCode.hashCode() : 0;
      result = result * 37 + (errorMsg != null ? errorMsg.hashCode() : 0);
      result = result * 37 + (returnMethod != null ? returnMethod.hashCode() : 0);
      result = result * 37 + (retnMessage != null ? retnMessage.hashCode() : 0);
      result = result * 37 + (retns != null ? retns.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Msg_Retn> {
    private static final long serialVersionUID = 1L;


    public Integer errorCode;
    public String errorMsg;
    public String returnMethod;
    public ByteString retnMessage;
    public List<Msg_Retn> retns;

    public Builder() {
    }

    public Builder(Msg_Retn message) {
      super(message);
      if (message == null) return;
      this.errorCode = message.errorCode;
      this.errorMsg = message.errorMsg;
      this.returnMethod = message.returnMethod;
      this.retnMessage = message.retnMessage;
      this.retns = copyOf(message.retns);
    }

    @Override
    public Msg_Retn build() {
      checkRequiredFields();
      return new Msg_Retn(this);
    }
  }
}
